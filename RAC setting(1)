# RAC (1) - install Linux, create ASM (IP설정, Disks)

나는 28,29번 가져감

## **Oracle Real Application Clusters 19c Technical Architecture**

![2025-06-26 09 54 11.png](images/Export-f54ab508-0199-4520-8ef9-3ca01d87ff20/2025-06-26_09_54_11.png)

![2025-06-26 10 07 55.png](Export-f54ab508-0199-4520-8ef9-3ca01d87ff20)

![뭉태기](Export-f54ab508-0199-4520-8ef9-3ca01d87ff20)

뭉태기

![2025-06-26 10 21 35.png](2025-06-26_10_21_35.png)

- 또 다른 메모리 영역에 존재한다, 네트워크로 연결됨 (서버들)
- 소프트웨어들끼리는 따로 작동
- 전부 네트워크를 통해 이어져있는 서버와 저장공간 등등
- 게이트웨이필요없음, IP 두 개 있음 된다
- 빠른속도의 작업들을 처리한다
- 외부에서 이 서버를 인식할 수 있는 IP필요
- 내장 LAN필요
- DNS서버형식을 빌려서 스캔(일반적으로 인식할 수 있는 서버)
- shared storage는 공유하는 데이터, 리두로드, 컨트롤파일, 아카이브파일들을 따로 관리하는 영역이다
    - OS가 감당할 수 없어서 스토리지를 따로 관리하는 소프트웨어를 설치하는 경우있음
    - 이제는 ASM이 많이 안정화되었다
- 메모리에서 메모리로 데이터를 넘긴다
- RAC때문에 오라클 쓰는 회사들 있음
- RAC를 활용하는 이유 : DB는 항상 오픈되어 있어야하기 때문에( HA요청때문에)

## 오라클 19c RAC 설치(VM 필요 설정 포함) 1, 2번까지

<aside>
➕

1. install Linux :현재 oel7.9, DISK할당, 네트워크 세팅 등등
2. create ASM : 앞서 만든 DISK이용해서 세팅
    
    -이 시점에 서버 복사-
    
    ---
    
3. install grid :현재 19.3, 
4. install DB S/W + create DB
</aside>

### 1. install Linux :현재 oel7.9, DISK할당, 네트워크 세팅 등등

1. VMware세팅
    
    ![2025-06-26 11 41 32.png](2025-06-26_11_41_32.png)
    
    ![2025-06-26 11 41 09.png](2025-06-26_11_41_09.png)
    
    ![2025-06-26 11 43 15.png](2025-06-26_11_43_15.png)
    
    ![2025-06-26 11 42 30.png](2025-06-26_11_42_30.png)
    
    ![2025-06-26 11 42 53.png](2025-06-26_11_42_53.png)
    
    ![2025-06-26 11 46 07.png](2025-06-26_11_46_07.png)
    
    ![2025-06-26 12 00 54.png](2025-06-26_12_00_54.png)
    
    ![2025-06-26 12 00 42.png](2025-06-26_12_00_42.png)
    
    ![2025-06-26 12 00 32.png](2025-06-26_12_00_32.png)
    
    ![2025-06-26 11 50 00.png](2025-06-26_11_50_00.png)
    
    ![2025-06-26 12 15 34.png](2025-06-26_12_15_34.png)
    
2. 오라클 19c RAC 설치 시작

```sql
yum install oracle-database-preinstall-19c ⇒ 필요한 RPM패키지들을 찾아준다
```

![에러발생화면](2025-06-26_13_06_38.png)

에러발생화면

🚨 에러가 나는 경우 🚨

```sql
ps -ef|grep yum <<-- yum 프로세서 kill
```

```sql
rm -rf /var/run/yum.pid <<-- 파일 제거
```

![y두번](2025-06-26_13_07_11.png)

y두번

```sql
 - Root:
  [root@oel7rac1 ~]# cat /etc/group
  [root@oel7rac1 ~]# groupadd dba     <<-- 이미 생성
  
  [root@oel7rac1 ~]# cat /etc/passwd

  [root@oel7rac1 ~]# useradd -s /bin/bash -g dba grid
  [root@oel7rac1 ~]# usermod -g dba oracle
  [root@oel7rac1 ~]# groupdel oracle

  [root@oel7rac1 ~]# passwd grid
  [root@oel7rac1 ~]# mkdir -p /home/STAGE
  [root@oel7rac1 ~]# chmod 777 /home/STAGE/
```

![#cd /home/grid/.bash_profile에 umask022추가](2025-06-26_13_14_33.png)

#cd /home/grid/.bash_profile에 umask022추가

![# cd /home/oracle/.bash_profile 에 umask 022 추가](2025-06-26_13_14_45.png)

# cd /home/oracle/.bash_profile 에 umask 022 추가

![grid에 필요권한 설정](2025-06-26_13_14_56.png)

grid에 필요권한 설정

![grid에 필요 디렉토리 설정](2025-06-26_13_17_19.png)

grid에 필요 디렉토리 설정

![oracle에 필요 디렉토리 설정](2025-06-26_13_17_27.png)

oracle에 필요 디렉토리 설정

```sql
- Root
[root@oel7rac1 ~]# mkdir -p /u01/app/oracle/19.3.0/grid
[root@oel7rac1 ~]# mkdir -p /u01/app/grid
[root@oel7rac1 ~]# chown -R grid:dba /u01
[root@oel7rac1 ~]# chmod -R 775 /u01
=> 여기까지 그리드
[root@oel7rac1 ~]# mkdir -p /u02/app/oracle
[root@oel7rac1 ~]# mkdir -p /u02/app/oraInventory
[root@oel7rac1 ~]# chown -R oracle:dba /u02/app/oracle
[root@oel7rac1 ~]# chown -R oracle:dba /u02/app/oraInventory
[root@oel7rac1 ~]# chmod -R 775 /u02/app
= >공유폴더 shared 연결 (vm 세팅 -> 옵션 )
```

![2025-06-26 15 38 47.png](2025-06-26_15_38_47.png)

![2025-06-26 14 40 29.png](2025-06-26_14_40_29.png)

```sql
[root@oel7rac1 ~]# ip addr
[root@oel7rac1 ~]# vi /etc/hosts
```

![[root@oel7rac1 ~]# vi /etc/hosts](2025-06-26_14_49_28.png)

[root@oel7rac1 ~]# vi /etc/hosts

### Public ⇒ 외부에서 들어올 때 찾아 올 IP

192.168.101.28 oel7rac1  ⇒ 나는 끝자리 28,29번 사용
192.168.101.29 oel7rac2

### Private ⇒ 게이트웨이 없이 뒤야함, 나가지 않는다

192.168.56.128 oel7rac1-priv
192.168.56.129 oel7rac2-priv

### Virtual ⇒ public보다 많이 쓰기도 함

192.168.101.20 oel7rac1-vip ⇒ 끝자리 20,21사용
192.168.101.21 oel7rac2-vip

### Scan ⇒ 3개 사용을 오라클에선 권장하긴함, 바깥에서 타고 들어 올 때 길 찾아줌

192.168.101.72 oel7rac-scan

![호스트네임 확인](2025-06-26_14_59_20.png)

호스트네임 확인

```sql
[root@oel7rac1 ~]# hostnamectl  set-hostname  oel7rac1
[root@oel7rac1 ~]# hostnamectl  set-hostname  oel7rac1  --pretty
[root@oel7rac1 ~]# hostnamectl  set-hostname  oel7rac1  --static
[root@oel7rac1 ~]# hostnamectl  set-hostname  oel7rac1  --transient
[root@oel7rac1 ~]# hostnamectl  status
```

```sql
[root@oel7rac1 ~]# grep MemTotal /proc/meminfo
   MemTotal:        7856532 kB

[root@oel7rac1 ~]# grep SwapTotal /proc/meminfo
 SwapTotal:      25698300 kB
```

```sql
[root@oel7rac1 ~]# vi /etc/security/limits.conf
grid       soft     nofile     4096
grid       hard     nofile     65536
grid       soft     nproc      16384
grid       hard     nproc      16384
grid       soft     stack      10240
grid       hard     stack      32768
grid       soft     memlock    3145728
grid       hard     memlock    3145728

oracle       soft     nofile     4096
oracle       hard     nofile     65536
oracle       soft     nproc      16384
oracle       hard     nproc      16384
oracle       soft     stack      10240
oracle       hard     stack      32768
oracle       soft     memlock    3145728
oracle       hard     memlock    3145728
```

```sql
[root@oel7rac1 ~]# systemctl stop firewalld
[root@oel7rac1 ~]# systemctl disable firewalld
```

```sql
[root@oel7rac1 ~]# yum install ntp
```

```sql
[root@oel7rac1 ~]# systemctl start ntpd
[root@oel7rac1 ~]# systemctl enable ntpd
[root@oel7rac1 ~]# systemctl status ntpd

[root@oel7rac1 ~]# shutdown -h 0 
```

### 2. create ASM : 앞서 만든 DISK이용해서 세팅

-이 시점에 서버 복사-

![clone선택](2025-06-26_15_40_41.png)

clone선택

![2025-06-26 15 42 38.png](2025-06-26_15_42_38.png)

![2025-06-26 15 42 51.png](2025-06-26_15_42_51.png)

⇒RAC2에서는 아까 지정해준 IP주소로 바꿔준다(public, private…)

```sql
[root@oel7rac1 ~]# hostnamectl  set-hostname  oel7rac2
 [root@oel7rac1 ~]# hostnamectl  set-hostname  oel7rac2  --pretty
 [root@oel7rac1 ~]# hostnamectl  set-hostname  oel7rac2  --static
 [root@oel7rac1 ~]# hostnamectl  set-hostname  oel7rac2  --transient
 hostnamectl  set-hostname  oel7rac2  --transient
 [root@oel7rac1 ~]# hostnamectl  status
```

```sql
* 각 노드별 Reboot
[root@oel7rac1 ~]# reboot

[root@oel7rac1 ~]# reboot
```

```sql
[grid@oel7rac2 ~]$ ssh oel7rac2 => rac1 grid에서 확인

[oracle@oel7rac2 ~]$ ssh oracle@oel7rac1 => rac2의 oracle에서 확인
```

```sql
asmlib 설치

[root@oel7rac1 ~]# yum list *oracleasm*

[root@oel7rac1 ~]# yum install oracleasm-support

[root@oel7rac1 ~]# yum install kmod-oracleasm

[root@oel7rac2 ~]# yum list *oracleasm*

[root@oel7rac2 ~]# yum install oracleasm-support

[root@oel7rac2 ~]# yum install kmod-oracleasm
```

```sql
- rac1/rac2
[root@oel7rac1 ~]# shutdown -h 0
[root@oel7rac2 ~]# shutdown -h 0
```

![rac1에 하드디스크 20G 붙여주기 (allocate), 경로는 아까 D드라이브에 만든 storage, 이름은 asm01부터 03까지만들기](2025-06-26_16_11_35.png)

rac1에 하드디스크 20G 붙여주기 (allocate), 경로는 아까 D드라이브에 만든 storage, 이름은 asm01부터 03까지만들기

![preallocated인 디스크를 누르고 오른쪽 중앙의 advance클릭, independent누르고 persistent로 변환](2025-06-26_16_12_40.png)

preallocated인 디스크를 누르고 오른쪽 중앙의 advance클릭, independent누르고 persistent로 변환

![꼭 persistent가 된 것 확인](2025-06-26_16_12_53.png)

꼭 persistent가 된 것 확인

![asm01, asm02, asm03 만들기](2025-06-26_16_21_20.png)

asm01, asm02, asm03 만들기

![rac2에서!!!! 1의 디스크를 가져온다](2025-06-26_16_46_09.png)

rac2에서!!!! 1의 디스크를 가져온다

![1에서 만든것 재탕하는 2](2025-06-26_16_46_22.png)

1에서 만든것 재탕하는 2

![받은스크립트.png](%EB%B0%9B%EC%9D%80%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8.png)

받은 스크립트에서 

```sql
scsi0:1.deviceType = "disk"
```

```sql
scsi0:2.deviceType = "disk"
```

```sql
scsi0:3.deviceType = "disk"
```

```sql
disk.locking = "FALSE"
diskLib.dataCacheMaxSize = "0"
scsi0.sharedBus = "virtual"
```

위 내용을  VMware virtual machine configuration파일에 아래 형태처럼 복붙해준다(1,2둘 다)

![2025-06-26 16 57 21.png](2025-06-26_16_57_21.png)

![붙인결과물](2025-06-26_16_56_25.png)

붙인결과물

<RAC1에서>

```sql
[root@oel7rac1 ~]# /usr/sbin/oracleasm configure -i
Configuring the Oracle ASM library driver.
```

```sql
[root@oel7rac1 ~]#  /usr/sbin/oracleasm init
```

```sql
[root@oel7rac1 ~]# fdisk -l
[root@oel7rac1 ~]# lsblk
[root@oel7rac1 ~]# fdisk /dev/sdb                           n-p-엔터-엔터-엔터-w
[root@oel7rac1 ~]# fdisk /dev/sdc                           n-p-엔터-엔터-엔터-w
[root@oel7rac1 ~]# fdisk /dev/sdd                           n-p-엔터-엔터-엔터-w
```

```sql
[root@oel7rac1 ~]# pvcreate /dev/sdb1 /dev/sdc1   /dev/sdd1   /dev/sde1   /dev/sdf1
```

![2025-06-26 17 17 55.png](2025-06-26_17_17_55.png)

```sql
[root@oel7rac1 ~]# oracleasm createdisk DATA1 /dev/sdb1
Writing disk header: done
Instantiating disk: done
[root@oel7rac1 ~]# oracleasm createdisk DATA2 /dev/sdc1
Writing disk header: done
Instantiating disk: done
[root@oel7rac1 ~]# oracleasm createdisk FRA   /dev/sdd1
Writing disk header: done
Instantiating disk: done
[root@oel7rac1 ~]# oracleasm listdisks
```

![2025-06-26 17 18 29.png](2025-06-26_17_18_29.png)

<RAC2에서>

```sql
[root@oel7rac1 ~]# /usr/sbin/oracleasm configure -i
```

```sql
[root@oel7rac1 ~]#  /usr/sbin/oracleasm init
```

```sql
[root@oel7rac2 ~]# oracleasm scandisks
```

![2025-06-26 17 18 51.png](2025-06-26_17_18_51.png)

<RAC1과 2 둘 다 grid에 스크립트 삽입>

```sql
$ cd /home/grid/.bash_profile
```

```sql
export LANG=C
export ORACLE_BASE=/u01/app/grid
export ORACLE_HOME=/u01/app/oracle/19.3.0/grid
export ORACLE_SID=+ASM1
export LD_LIBRARY_PATH=$ORACLE_HOME/lib:/lib:/usr/lib
export NLS_LANG=AMERICAN_AMERICA.AL32UTF8
export PATH=$ORACLE_HOME/bin:$PATH

alias oh='cd $ORACLE_HOME'
alias dbs='cd $ORACLE_HOME/dbs'
alias net='cd $ORACLE_HOME/network/admin'

```

<RAC1에서 파일 압축풀기>

```sql
[grid@oel7rac1 ~]$ cd /u01/app/oracle/19.3.0/grid
[grid@oel7rac1 grid]$ unzip -q /home/STAGE/V982068-01.zip
```

![[gridSetup.sh](http://gridsetup.sh/)  있는지 확인](2025-06-26_18_04_52.png)

[gridSetup.sh](http://gridsetup.sh/)  있는지 확인

```sql
[grid@oel7rac1 grid]$ ./gridSetup.sh
ERROR: Unable to verify the graphical display setup. This application requires X display. Make sure that xdpyinfo exist under PATH variable.

No X11 DISPLAY variable was set, but this program performed an operation which requires it.
[grid@oel7rac1 grid]$ export DISPLAY=192.168.101.1:0
[grid@oel7rac1 grid]$ ./gridSetup.sh
Launching Oracle Grid Infrastructure Setup Wizard...
```

6월26일 여기까지 6월27일에 [grid@oel7rac1 grid]$ ./gridSetup.sh부터 다시
